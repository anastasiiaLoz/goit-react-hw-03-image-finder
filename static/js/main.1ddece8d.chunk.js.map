{"version":3,"sources":["Components/imageGalleryItem/ImageGalleryItem.js","Components/imageGallery/ImageGallery.js","Components/button/Button.js","Components/searchbar/Searchbar.js","Components/modal/Modal.js","Components/Gallery.js","Components/App.js","index.js"],"names":["ImageGalleryItem","image","getImage","className","src","webformatURL","alt","tags","onClick","data-image","largeImageURL","ImageGallery","images","map","id","Button","Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","type","onChange","autoComplete","autoFocus","placeholder","Component","modalRoot","document","getElementById","Modal","onKeyDownCloseModal","evt","code","onClose","onCloseBackdropModal","target","window","addEventListener","removeEventListener","open","createPortal","defaultProps","Gallery","page","searchQuery","loading","showModal","fetchPictures","a","axios","get","data","prevState","hits","console","log","scrollTo","top","documentElement","scrollHeight","behavior","handlerForm","onLoadMore","dataset","toggleModal","prevProps","length","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.1ddece8d.chunk.js","sourcesContent":["import React from 'react'\n// import { StyledImageGalleryItem } from './StyledImageGalleryItem';\n\nconst ImageGalleryItem = ({ image, getImage }) => {\n    return (\n        <>\n            <li className=\"ImageGalleryItem\">\n                <img src={image.webformatURL} alt={image.tags} className=\"ImageGalleryItem-image\" onClick={getImage} data-image={ image.largeImageURL}/>\n            </li>\n        </>\n    );\n}\n\nexport default ImageGalleryItem;","import React from 'react'\nimport ImageGalleryItem from '../imageGalleryItem/ImageGalleryItem'\n// import { StyledImageGallery } from './StyledImageGallery';\n\n\nconst ImageGallery = ({ images, getImage }) => {\n    return (\n        <>\n            <ul className=\"ImageGallery\">\n                {images.map(( image ) => (\n                    <ImageGalleryItem\n                        image={image}\n                        key={image.id}\n                        getImage={ getImage}\n                    />\n                ))}\n        </ul>\n        </>\n    );\n}\n\nexport default ImageGallery;","import React from 'react'\n\nconst Button = ({ onClick }) => {\n    return (\n        <>\n            <button className=\"Button\" onClick={onClick}>Load More</button>\n        </>\n    );\n}\n\nexport default Button;\n\n\n\n\n\n","import React, { Component} from 'react'\n// import { StyledHeader } from './StyledSearchbar';\n\nclass Searchbar extends Component {\n    state = { query: '' }\n\n    handleChange = e => {\n        this.setState({query: e.currentTarget.value})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n    \n        this.props.onSubmit(this.state.query)\n        this.setState({query: ''})\n    }\n\n    render() {\n        return (\n            <header className=\"Searchbar\">\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n                    <button type=\"submit\" className=\"SearchForm-button\">\n                        <span className=\"SearchForm-button-label\">Search</span>\n                    </button>\n\n                    <input\n                        className=\"SearchForm-input\"\n                        type=\"text\"\n                        value={this.state.query}\n                        onChange={ this.handleChange}\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                    />\n                </form>\n            </header>\n        );\n    }\n}\n\nexport default Searchbar;\n\n","import React, { Component } from 'react';\nimport { createPortal } from \"react-dom\";\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.getElementById('modal-root');\n\nexport default class Modal extends Component {\n    static defaultProps = {\n        open: false,\n    }\n    static propTypes = {\n        open: PropTypes.bool,\n        onClose: PropTypes.bool,\n    }.isRequired\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.onKeyDownCloseModal)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.onKeyDownCloseModal)\n    }\n\n    onKeyDownCloseModal = evt => {\n        if(evt.code === 'Escape'){\n            this.props.onClose()\n        }\n    }\n\n    onCloseBackdropModal = (evt) => {\n        if (evt.currentTarget === evt.target) {\n            this.props.onClose();\n        }\n    }\n\n\n    render() {\n        const { open } = this.props;\n\n        return createPortal(\n            open ? (\n                <div className=\"Overlay\" onClick={this.onCloseBackdropModal }>\n                    <div className=\"Modal\">\n                        <img src={ this.props.largeImageURL} alt=\"\" />\n                    </div>\n                </div>\n            ) : null, modalRoot\n        )\n    }\n}\n","import React, { Component} from 'react'\nimport axios from 'axios'\nimport ImageGallery from './imageGallery/ImageGallery'\nimport Button from './button/Button'\nimport Searchbar from './searchbar/Searchbar'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from 'react-loader-spinner'\nimport Modal from './modal/Modal'\n\nclass Gallery extends Component {\n\n    state = {\n        images: [],\n        page: 1,\n        searchQuery: '',\n        loading: false,\n        showModal: false,\n        largeImageURL: '',\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.searchQuery !== this.state.searchQuery || \n            prevState.page !== this.state.page) {\n            this.fetchPictures()\n        } \n    }\n    \n    fetchPictures = async () => {\n        const { searchQuery, page, loading } = this.state\n        this.setState({ loading: true });\n\n        try {\n            const { data } = await axios.get(\n                `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=21141411-eb823bafbda7b049277559c1c&image_type=photo&orientation=horizontal&per_page=12`\n            )\n                this.setState((prevState) => ({\n                    images: [...prevState.images, ...data.hits],\n                }));\n\n        }\n        catch (error) {\n            console.log(error);\n        }\n        finally {\n            this.setState({ loading: false })\n            window.scrollTo({\n                top: document.documentElement.scrollHeight,\n                behavior: \"smooth\",\n            });\n        }\n    }\n\n    handlerForm = (query) => {this.setState({searchQuery: query, page: 1, images: []});\n    }\n    \n\n    onLoadMore = () => {\n        this.setState((prevState) => ({page: prevState.page + 1}))\n    }\n\n    getImage = evt => {\n        this.setState({\n            largeImageURL: evt.target.dataset.image\n        });\n        this.toggleModal();\n    };\n\n    toggleModal = () => {\n        this.setState(({ showModal }) => ({\n            showModal: !showModal\n        }));\n    };\n\n    \n\n    render() {\n        const { images, loading, showModal, largeImageURL } = this.state;\n        const { handlerForm, onLoadMore, getImage,toggleModal } = this;\n        \n        return (\n            <>\n                <Searchbar onSubmit={handlerForm} />\n\n                <ImageGallery images={images} getImage={getImage} />\n                { loading && <Loader />  }\n\n                {images.length > 0 && \n                    <Button onClick={onLoadMore}/>\n                }\n                <Modal open={showModal} onClose={toggleModal} largeImageURL={largeImageURL} />\n            </>\n        );\n    }\n}\n\nexport default Gallery;","import React from 'react'\nimport Gallery from './Gallery'\n\nconst App = () => {\n    return (\n        <>\n            <Gallery />\n        </>\n    );\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App'\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}